<?xml version="1.0"?>

<!--
License: Apache 2.0. See LICENSE file in root directory.
Copyright(c) 2017 Intel Corporation. All Rights Reserved

This is a modified URDF model for the Intel RealSense 435/435i camera, in its
aluminum peripherial evaluation case.
-->

<robot xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- Includes -->
  <xacro:include filename="$(find realsense2_description)/urdf/_materials.urdf.xacro" />
  <xacro:include filename="$(find realsense2_description)/urdf/_usb_plug.urdf.xacro" />

  <xacro:macro name="sensor_d435" params="parent *origin depth_rate rgb_rate ir_rate name:=camera use_nominal_extrinsics:=true add_plug:=false use_mesh:=true">
    <xacro:property name="M_PI" value="3.1415926535897931" />
    <xacro:property name="deg_to_rad" value="${M_PI/180.0}" />

    <!-- The following values are approximate, and the camera node
     publishing TF values with actual calibrated camera extrinsic values -->
    <xacro:property name="d435_cam_depth_to_infra1_offset" value="0.0"/>
    <xacro:property name="d435_cam_depth_to_infra2_offset" value="-0.050"/>
    <xacro:property name="d435_cam_depth_to_color_offset" value="0.015"/>

    <!-- The following values model the aluminum peripherial case for the
        D435 camera, with the camera joint represented by the actual
        peripherial camera tripod mount -->
    <xacro:property name="d435_cam_width" value="0.090"/>
    <xacro:property name="d435_cam_height" value="0.025"/>
    <xacro:property name="d435_cam_depth" value="0.02505"/>
    <xacro:property name="d435_cam_mount_from_center_offset" value="0.0149"/>
    <!-- glass cover is 0.1 mm inwards from front aluminium plate -->
    <xacro:property name="d435_glass_to_front" value="0.1e-3"/>
    <!-- see datasheet Revision 007, Fig. 4-4 page 65 -->
    <xacro:property name="d435_zero_depth_to_glass" value="4.2e-3"/>
    <!-- convenience precomputation to avoid clutter-->
    <xacro:property name="d435_mesh_x_offset" value="${d435_cam_mount_from_center_offset-d435_glass_to_front-d435_zero_depth_to_glass}"/>

    <!-- The following offset is relative the the physical D435 camera peripherial
        camera tripod mount -->
    <xacro:property name="d435_cam_depth_px" value="${d435_cam_mount_from_center_offset}"/>
    <xacro:property name="d435_cam_depth_py" value="0.0175"/>
    <xacro:property name="d435_cam_depth_pz" value="${d435_cam_height/2}"/>

    <!-- camera body, with origin at bottom screw mount -->
    
    <xacro:if value="${ parent != name+'_link' }">
    <joint name="${name}_joint" type="fixed">
      <xacro:insert_block name="origin" />
      <parent link="${parent}"/>
      <child link="${name}_bottom_screw_frame" />
    </joint>
    <link name="${name}_bottom_screw_frame"/>

    <joint name="${name}_link_joint" type="fixed">
      <origin xyz="${d435_mesh_x_offset} ${d435_cam_depth_py} ${d435_cam_depth_pz}" rpy="0 0 0"/>
      <parent link="${name}_bottom_screw_frame"/>
      <child link="${name}_link" />
    </joint>
    </xacro:if>

    <link name="${name}_link">
      <visual>
        <xacro:if value="${use_mesh}">
          <!-- the mesh origin is at front plate in between the two infrared camera axes -->
          <origin xyz="${d435_zero_depth_to_glass + d435_glass_to_front} ${-d435_cam_depth_py} 0" rpy="${M_PI/2} 0 ${M_PI/2}"/>
          <geometry>
            <mesh filename="package://realsense2_description/meshes/d435.dae" />
          </geometry>
        </xacro:if>
        <xacro:unless value="${use_mesh}">
          <origin xyz="0 ${-d435_cam_depth_py} 0" rpy="0 0 0"/>
          <geometry>
            <box size="${d435_cam_depth} ${d435_cam_width} ${d435_cam_height}"/>
          </geometry>
          <material name="aluminum"/>
        </xacro:unless>     
      </visual>
      <collision>
        <origin xyz="0 ${-d435_cam_depth_py} 0" rpy="0 0 0"/>
        <geometry>
          <box size="${d435_cam_depth} ${d435_cam_width} ${d435_cam_height}"/>
        </geometry>
      </collision>
      <inertial>
        <!-- The following are not reliable values, and should not be used for modeling -->
        <mass value="0.072" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.003881243" ixy="0.0" ixz="0.0" iyy="0.000498940" iyz="0.0" izz="0.003879257" />
      </inertial>
    </link>

    <!-- Use the nominal extrinsics between camera frames if the calibrated extrinsics aren't being published. e.g. running the device in simulation  -->
    <xacro:if value="${use_nominal_extrinsics}">
      <!-- camera depth joints and links -->
      <joint name="${name}_depth_joint" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <parent link="${name}_link"/>
        <child link="${name}_depth_frame" />
      </joint>
      <link name="${name}_depth_frame"/>
      <gazebo reference="${name}_depth_frame">
        <sensor name="${name}_ired1" type="depth">
          <visualize>0</visualize>
          <update_rate>${depth_rate}</update_rate>
          <always_on>1</always_on>
          <camera name="${name}">
            <horizontal_fov>${85.2*deg_to_rad}</horizontal_fov>
            <image>
              <width>848</width>
              <height>480</height>
            </image>
            <clip>
              <near>0.2</near>
              <far>10</far>
            </clip>
            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.1</stddev>
            </noise>
          </camera>
          <plugin name="{name}_depth" filename="libgazebo_ros_depth_camera.so">
            <alwaysOn>1</alwaysOn>
            <!-- Keep this zero, update_rate in the parent <sensor> tag
              will control the frame rate. -->
            <updateRate>${depth_rate}</updateRate>
            <cameraName>${name}</cameraName>
            <imageTopicName>infra1/image_raw</imageTopicName>
            <cameraInfoTopicName>infra1/camera_info</cameraInfoTopicName>
            <depthImageTopicName>depth/image_rect_raw</depthImageTopicName>
            <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
            <pointCloudTopicName>depth/points</pointCloudTopicName>
            <frameName>${name}_depth_optical_frame</frameName>
            <pointCloudCutoff>0.3</pointCloudCutoff>
            <pointCloudCutoffMax>8.0</pointCloudCutoffMax>
            <useDepth16UC1Format>1</useDepth16UC1Format>
          </plugin>
        </sensor>
      </gazebo>

      <joint name="${name}_depth_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
        <parent link="${name}_depth_frame" />
        <child link="${name}_depth_optical_frame" />
      </joint>
      <link name="${name}_depth_optical_frame"/>

      <!-- camera left IR joints and links -->
      <joint name="${name}_infra1_joint" type="fixed">
        <origin xyz="0 ${d435_cam_depth_to_infra1_offset} 0" rpy="0 0 0" />
        <parent link="${name}_link" />
        <child link="${name}_infra1_frame" />
      </joint>
      <link name="${name}_infra1_frame"/>

      <joint name="${name}_infra1_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
        <parent link="${name}_infra1_frame" />
        <child link="${name}_infra1_optical_frame" />
      </joint>
      <link name="${name}_infra1_optical_frame"/>

      <!-- camera right IR joints and links -->
      <joint name="${name}_infra2_joint" type="fixed">
        <origin xyz="0 ${d435_cam_depth_to_infra2_offset} 0" rpy="0 0 0" />
        <parent link="${name}_link" />
        <child link="${name}_infra2_frame" />
      </joint>
      <link name="${name}_infra2_frame"/>
      <gazebo reference="${name}_infra2_frame">
        <sensor name="${name}_ired2" type="camera">
          <camera name="${name}">
            <horizontal_fov>${85.2*deg_to_rad}</horizontal_fov>
            <image>
              <width>848</width>
              <height>480</height>
              <format>L_INT8</format>
            </image>
            <clip>
              <near>0.1</near>
              <far>100</far>
            </clip>
            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.05</stddev>
            </noise>
          </camera>
          <always_on>1</always_on>
          <update_rate>${depth_rate}</update_rate>
          <visualize>0</visualize>
          <plugin name="{name}_ir2" filename="libgazebo_ros_camera.so">
            <alwaysOn>1</alwaysOn>
            <updateRate>${ir_rate}</updateRate>
            <cameraName>${name}/infra2</cameraName>
            <imageTopicName>image_raw</imageTopicName>
            <cameraInfoTopicName>camera_info</cameraInfoTopicName>
            <frameName>${name}_infra2_optical_frame</frameName>
          </plugin>
        </sensor>
      </gazebo>

      <joint name="${name}_infra2_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
        <parent link="${name}_infra2_frame" />
        <child link="${name}_infra2_optical_frame" />
      </joint>
      <link name="${name}_infra2_optical_frame"/>

      <!-- camera color joints and links -->
      <joint name="${name}_color_joint" type="fixed">
        <origin xyz="0 ${d435_cam_depth_to_color_offset} 0" rpy="0 0 0" />
        <parent link="${name}_link" />
        <child link="${name}_color_frame" />
      </joint>
      <link name="${name}_color_frame"/>
      <gazebo reference="${name}_color_frame">
        <sensor name="${name}_color" type="camera">
          <camera name="${name}">
            <horizontal_fov>${69.4*deg_to_rad}</horizontal_fov>
            <image>
              <width>848</width>
              <height>480</height>
              <format>RGB_INT8</format>
            </image>
            <clip>
              <near>0.1</near>
              <far>100</far>
            </clip>
            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.007</stddev>
            </noise>
          </camera>
          <always_on>1</always_on>
          <update_rate>${rgb_rate}</update_rate>
          <visualize>0</visualize>
          <plugin name="{name}_rgb" filename="libgazebo_ros_camera.so">
            <alwaysOn>1</alwaysOn>
            <updateRate>${rgb_rate}</updateRate>
            <cameraName>${name}/color</cameraName>
            <imageTopicName>image_raw</imageTopicName>
            <cameraInfoTopicName>camera_info</cameraInfoTopicName>
            <frameName>${name}_color_optical_frame</frameName>
          </plugin>
        </sensor>
      </gazebo>

      <joint name="${name}_color_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
        <parent link="${name}_color_frame" />
        <child link="${name}_color_optical_frame" />
      </joint>
      <link name="${name}_color_optical_frame"/>
    </xacro:if>

    <xacro:if value="${add_plug}">
      <xacro:usb_plug parent="${name}_link" name="${name}_usb_plug">
        <origin xyz="${d435_cam_mount_from_center_offset - 0.02095} ${-d435_cam_depth_py - 0.0353} 0" rpy="0 0 0"/>
      </xacro:usb_plug>
    </xacro:if>
  </xacro:macro>

  <xacro:macro name="d435i_imu_modules" params="name imu_rate use_nominal_extrinsics:=true">
    <xacro:property name="M_PI" value="${pi}" />

    <xacro:if value="${use_nominal_extrinsics}">
      <link name="${name}_accel_frame" />
      <link name="${name}_accel_optical_frame" />
      <link name="${name}_gyro_frame" />
      <link name="${name}_gyro_optical_frame"/>
      <gazebo reference="${name}_gyro_frame">
        <sensor name="imu_sensor" type="imu">
          <gravity>true</gravity>
          <always_on>true</always_on>
          <update_rate>${imu_rate}</update_rate>
          <plugin filename="libgazebo_ros_imu_sensor.so" name="${name}_imu">
            <alwaysOn>true</alwaysOn>
            <bodyName>${name}_gyro_frame</bodyName>
            <topicName>${name}/imu</topicName>
            <updateRateHZ>${imu_rate}</updateRateHZ>
            <gaussianNoise>0.002</gaussianNoise>
            <xyzOffset>0 0 0</xyzOffset>
            <rpyOffset>0 0 0</rpyOffset>
            <frameName>${name}_gyro_optical_frame</frameName>
            <initialOrientationAsReference>true</initialOrientationAsReference>
          </plugin>
        </sensor>
      </gazebo>

      <joint name="${name}_accel_joint" type="fixed">
        <origin xyz = "-0.01174 -0.00552 0.0051" rpy = "0 0 0" />
        <parent link="${name}_link" />
        <child link="${name}_accel_frame" />
      </joint>

      <joint name="${name}_accel_optical_joint" type="fixed">
        <origin xyz = "0 0 0" rpy = "${-M_PI/2} 0 ${-M_PI/2}" />
        <parent link="${name}_accel_frame" />
        <child link="${name}_accel_optical_frame" />
      </joint>

      <joint name="${name}_gyro_joint" type="fixed">
        <origin xyz = "-0.01174 -0.00552 0.0051" rpy = "0 0 0" />
        <parent link="${name}_link" />
        <child link="${name}_gyro_frame" />
      </joint>

      <joint name="${name}_gyro_optical_joint" type="fixed">
        <origin xyz = "0 0 0" rpy = "${-M_PI/2} 0 ${-M_PI/2}" />
        <parent link="${name}_gyro_frame" />
        <child link="${name}_gyro_optical_frame" />
      </joint>
    </xacro:if>
  </xacro:macro>

  <xacro:macro name="sensor_d435i" params="parent *origin depth_rate rgb_rate ir_rate imu_rate name:=camera use_nominal_extrinsics:=true">
    <xacro:sensor_d435 parent="${parent}" name="${name}" use_nominal_extrinsics="${use_nominal_extrinsics}" depth_rate="${depth_rate}" rgb_rate="${rgb_rate}" ir_rate="${ir_rate}">
      <xacro:insert_block name="origin" />
    </xacro:sensor_d435>
    <xacro:d435i_imu_modules name="${name}" use_nominal_extrinsics="${use_nominal_extrinsics}" imu_rate="${imu_rate}"/>
  </xacro:macro>
</robot>