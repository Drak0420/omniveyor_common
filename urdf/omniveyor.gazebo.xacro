<?xml version="1.0" ?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
  <xacro:arg name="gpu_ray_tracing" default="true"/>
  
  <xacro:property name="steerAxisX" value="0.2074" />
  <xacro:property name="steerAxisY" value="0.2074" />
  <xacro:property name="pumpkinLength" value="0.2" />
  <xacro:property name="forkLength" value="0.02" />
  <xacro:property name="wheelRadius" value="0.05" />
  <xacro:property name="steerAxisZ" value="${wheelRadius+pumpkinLength/2}" />

  <!-- Powered Casters -->
  <xacro:property name="one_pcv_caster">
    <inertial>
      <mass value="7.92"/>
      <inertia ixx="0.0332" ixy="0" ixz="0"
          iyy="0.0332" iyz="0" izz="0.02532"/>
    </inertial>
    <collision name="collision_p">
      <geometry>
        <cylinder radius="0.025" length="${pumpkinLength}"/>
      </geometry>
    </collision>
    <collision name="collision_f">
      <origin xyz="${-forkLength/2} 0 ${-pumpkinLength/2}" rpy="0 ${pi/2} 0"/>
      <geometry>
        <cylinder radius="0.01" length="${forkLength}"/>
      </geometry>
    </collision>
    <visual name="visual_p">
      <geometry>
        <cylinder radius="0.025" length="${pumpkinLength}"/>
      </geometry>
    </visual>
    <visual name="visual_f">
      <origin xyz="${-forkLength/2} 0 ${-pumpkinLength/2}" rpy="0 ${pi/2} 0"/>
      <geometry>
        <cylinder radius="0.01" length="${forkLength}"/>
      </geometry>
    </visual>
  </xacro:property>

  <xacro:property name="one_pcv_wheel">
    <inertial>
      <mass value="0.5"/>
      <inertia ixx="0.005" ixy="0" ixz="0"
          iyy="0.005" iyz="0" izz="0.01"/>
    </inertial>
    <collision>
      <geometry>
        <cylinder radius="${wheelRadius}" length="0.015"/>
      </geometry>
    </collision>
    <visual>
      <geometry>
        <cylinder radius="${wheelRadius}" length="0.015"/>
      </geometry>
      <material name="flat_black"/>
    </visual>
  </xacro:property>

  <xacro:macro name="pcv_assembly" params="prefix">
    <!-- Caster -->
    <link name="${prefix}_poweredCaster">
      <xacro:insert_block name="one_pcv_caster"/>
    </link>
    <!-- Wheel -->
    <link name="${prefix}_wheel">
      <xacro:insert_block name="one_pcv_wheel"/>
    </link>
    <gazebo reference="${prefix}_wheel">
      <mu1>0.9</mu1>
      <mu2>0.9</mu2>
      <slip1>0.0001</slip1>
      <slip2>0.0001</slip2>
      <material>Gazebo/FlatBlack</material>
    </gazebo>
    <!-- Steering joint -->
    <joint type="continuous" name="${prefix}_steer">
      <parent link="base_link"/>
      <child link="${prefix}_poweredCaster"/>
      <xacro:if value="${prefix == 'FL'}">
      <origin xyz="${steerAxisX} ${steerAxisY} ${steerAxisZ}" rpy="0 0 0"/>
      </xacro:if>
      <xacro:if value="${prefix == 'FR'}">
      <origin xyz="${steerAxisX} ${-steerAxisY} ${steerAxisZ}" rpy="0 0 0"/>
      </xacro:if>
      <xacro:if value="${prefix == 'RL'}">
      <origin xyz="${-steerAxisX} ${steerAxisY} ${steerAxisZ}" rpy="0 0 0"/>
      </xacro:if>
      <xacro:if value="${prefix == 'RR'}">
      <origin xyz="${-steerAxisX} ${-steerAxisY} ${steerAxisZ}" rpy="0 0 0"/>
      </xacro:if>
      <axis xyz="0 0 1"/>
    </joint>
    <!-- Rolling joint -->
    <joint type="continuous" name="${prefix}_wheel_axle">
      <parent link="${prefix}_poweredCaster"/>
      <child link="${prefix}_wheel"/>
      <origin xyz="${-forkLength} 0 ${-pumpkinLength/2}" rpy="0 ${pi/2} ${pi/2}"/>
      <axis xyz="0 0 1"/>
    </joint>
  </xacro:macro>

  <!-- Powerd Caster steering joints -->
  <xacro:pcv_assembly prefix="FL"/>
  <xacro:pcv_assembly prefix="FR"/>
  <xacro:pcv_assembly prefix="RL"/>
  <xacro:pcv_assembly prefix="RR"/>

  <gazebo reference="chassis">
    <material>Gazebo/DarkGrey</material>
  </gazebo>

  <xacro:property name="lidar_params">
        <pose>0 0 0 0 0 0</pose>
        <ray>
          <scan>
            <horizontal>
              <samples>720</samples>
              <resolution>1</resolution>
              <min_angle>-1.57</min_angle>
              <max_angle>1.57</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.05</min>
            <max>20</max>
            <resolution>0.01</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <always_on>1</always_on>
        <update_rate>40</update_rate>
        <visualize>true</visualize>
  </xacro:property>

  <gazebo reference="laser">
  <xacro:if value="$(arg gpu_ray_tracing)">
      <sensor name="laser" type="gpu_ray">
        <xacro:insert_block name="lidar_params"/>
        <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
          <topicName>scan</topicName>
          <frameName>laser</frameName>
        </plugin>
      </sensor>
  </xacro:if>
  <xacro:unless value="$(arg gpu_ray_tracing)">
      <sensor name="laser" type="ray">
        <xacro:insert_block name="lidar_params"/>
        <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
          <topicName>scan</topicName>
          <frameName>laser</frameName>
        </plugin>
      </sensor>
  </xacro:unless>
  </gazebo>

  <gazebo>
    <plugin filename="libOmniVeyorPlugin_ROS.so" name="omniveyor_simulator"/>
  </gazebo>
</robot>
